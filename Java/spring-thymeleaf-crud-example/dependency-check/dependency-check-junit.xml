<?xml version="1.0" encoding="UTF-8"?><testsuites failures="51" name="dependency-check" tests="34"><testsuite failures="0" errors="0" time="0" id="0" name="/src/src/main/resources/static/vendors/jquery-mask/Gruntfile.js" package="Gruntfile.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="Gruntfile.js"/></testsuite><testsuite failures="2" errors="0" time="0" id="1" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?ajv" package="ajv:6.10.2" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2020-15366" name="pkg:npm/ajv@6.10.2"><failure message="cvssV3: MEDIUM, score: 5.599999904632568 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L)"/><system-out>An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2020-15366 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?ajv, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-v88g-cgmw-v5xw" name="pkg:npm/ajv@6.10.2"><failure message="cvssV3: MEDIUM, score: 5.599999904632568 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L)"/><system-out>An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?ajv, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="2" name="/src/src/main/resources/static/vendors/fontawesome/js/all.js" package="all.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="all.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="3" name="/src/src/main/resources/static/vendors/fontawesome/js/all.min.js" package="all.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="all.min.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="4" name="/src/src/main/resources/static/vendors/fontawesome/attribution.js" package="attribution.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="attribution.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="5" name="/src/src/main/resources/static/vendors/bootstrap/js/bootstrap.bundle.js" package="bootstrap.bundle.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="bootstrap.bundle.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="6" name="/src/src/main/resources/static/vendors/bootstrap/js/bootstrap.bundle.min.js" package="bootstrap.bundle.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="bootstrap.bundle.min.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="7" name="/src/src/main/resources/static/vendors/bootstrap/js/bootstrap.esm.js" package="bootstrap.esm.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="bootstrap.esm.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="8" name="/src/src/main/resources/static/vendors/bootstrap/js/bootstrap.esm.min.js" package="bootstrap.esm.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="bootstrap.esm.min.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="9" name="/src/src/main/resources/static/vendors/bootstrap/js/bootstrap.js" package="bootstrap.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="bootstrap.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="10" name="/src/src/main/resources/static/vendors/bootstrap/js/bootstrap.min.js" package="bootstrap.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="bootstrap.min.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="11" name="/src/src/main/resources/static/vendors/fontawesome/js/brands.js" package="brands.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="brands.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="12" name="/src/src/main/resources/static/vendors/fontawesome/js/brands.min.js" package="brands.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="brands.min.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="13" name="/src/src/main/resources/static/vendors/fontawesome/js/conflict-detection.js" package="conflict-detection.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="conflict-detection.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="14" name="/src/src/main/resources/static/vendors/fontawesome/js/conflict-detection.min.js" package="conflict-detection.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="conflict-detection.min.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="15" name="/src/src/main/resources/static/vendors/jquery-mask/test/zepto/data.js" package="data.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="data.js"/></testsuite><testsuite failures="1" errors="0" time="0" id="16" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?debug" package="debug:3.2.6" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="GHSA-gxpj-cx7g-858c" name="pkg:npm/debug@3.2.6"><failure message="cvssV3: LOW, score: 3.700000047683716 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>Affected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter. 

As it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.

This was later re-introduced in version v3.2.0, and then repatched in versions 3.2.7 and 4.3.1.

## Recommendation

Version 2.x.x: Update to version 2.6.9 or later.
Version 3.1.x: Update to version 3.1.0 or later.
Version 3.2.x: Update to version 3.2.7 or later.
Version 4.x.x: Update to version 4.3.1 or later.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?debug, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="1" errors="0" time="0" id="17" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?debug" package="debug:4.1.1" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="GHSA-gxpj-cx7g-858c" name="pkg:npm/debug@4.1.1"><failure message="cvssV3: LOW, score: 3.700000047683716 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>Affected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter. 

As it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.

This was later re-introduced in version v3.2.0, and then repatched in versions 3.2.7 and 4.3.1.

## Recommendation

Version 2.x.x: Update to version 2.6.9 or later.
Version 3.1.x: Update to version 3.1.0 or later.
Version 3.2.x: Update to version 3.2.7 or later.
Version 4.x.x: Update to version 4.3.1 or later.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?debug, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="18" name="/src/src/main/resources/static/vendors/jquery-mask/test/zepto/event.js" package="event.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="event.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="19" name="/src/src/main/resources/static/vendors/fontawesome/js/fontawesome.js" package="fontawesome.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="fontawesome.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="20" name="/src/src/main/resources/static/vendors/fontawesome/js/fontawesome.min.js" package="fontawesome.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="fontawesome.min.js"/></testsuite><testsuite failures="2" errors="0" time="0" id="21" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?getobject" package="getobject:0.1.0" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2020-28282" name="pkg:npm/getobject@0.1.0"><failure message="cvssV3: CRITICAL, score: 9.800000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Prototype pollution vulnerability in &apos;getobject&apos; version 0.1.0 allows an attacker to cause a denial of service and may lead to remote code execution.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?getobject, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-957j-59c2-j692" name="pkg:npm/getobject@0.1.0"><failure message="cvssV3: CRITICAL, score: 9.800000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Prototype pollution vulnerability in &apos;getobject&apos; version 0.1.0 allows an attacker to cause a denial of service and may lead to remote code execution.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?getobject, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="6" errors="0" time="0" id="22" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?grunt" package="grunt:1.0.4" skipped="0" tests="6" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2020-7729" name="pkg:npm/grunt@1.0.4"><failure message="cvssV3: HIGH, score: 7.099999904632568 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H)"/><system-out>grunt - [ CVE-2020-7729 ] Code Injection via unsafe `YAML.load()` functionality

The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?grunt, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-m5pj-vjjf-4m3h" name="pkg:npm/grunt@1.0.4"><failure message="cvssV3: HIGH, score: 7.099999904632568 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H)"/><system-out>The package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?grunt, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2022-1537" name="pkg:npm/grunt@1.0.4"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in GitHub repository gruntjs/grunt prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user&apos;s .bashrc file or replace /etc/shadow file if the GruntJS user is root.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2022-1537 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?grunt, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-rm36-94g8-835r" name="pkg:npm/grunt@1.0.4"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in GitHub repository gruntjs/grunt prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user&apos;s .bashrc file or replace /etc/shadow file if the GruntJS user is root.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?grunt, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2022-0436" name="pkg:npm/grunt@1.0.4"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Path Traversal in GitHub repository gruntjs/grunt prior to 1.5.2.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?grunt, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-j383-35pm-c5h4" name="pkg:npm/grunt@1.0.4"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Grunt prior to version 1.5.2 is vulnerable to path traversal.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?grunt, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="2" errors="0" time="0" id="23" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?hosted-git-info" package="hosted-git-info:2.5.0" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2021-23362" name="pkg:npm/hosted-git-info@2.5.0"><failure message="cvssV3: MEDIUM, score: 5.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>The package hosted-git-info before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2021-23362 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?hosted-git-info, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-43f8-2h32-f4cj" name="pkg:npm/hosted-git-info@2.5.0"><failure message="cvssV3: MEDIUM, score: 5.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?hosted-git-info, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="1" errors="0" time="0" id="24" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?https-proxy-agent" package="https-proxy-agent:2.2.2" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="GHSA-pc5p-h8pf-mvwp" name="pkg:npm/https-proxy-agent@2.2.2"><failure message="cvssV3: MEDIUM, score: 6.099999904632568 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N)"/><system-out>Versions of `https-proxy-agent` prior to 2.2.3 are vulnerable to Machine-In-The-Middle. The package fails to enforce TLS on the socket if the proxy server responds the to the request with a HTTP status different than 200. This allows an attacker with access to the proxy server to intercept unencrypted communications, which may include sensitive information such as credentials.


## Recommendation

Upgrade to version 3.0.0 or 2.2.3.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?https-proxy-agent, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="25" name="/src/src/main/resources/static/vendors/jquery-mask/dist/jquery.mask.js" package="jquery.mask.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="jquery.mask.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="26" name="/src/src/main/resources/static/vendors/jquery-mask/src/jquery.mask.js" package="jquery.mask.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="jquery.mask.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="27" name="/src/src/main/resources/static/vendors/jquery-mask/dist/jquery.mask.min.js" package="jquery.mask.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="jquery.mask.min.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="28" name="/src/src/main/resources/static/vendors/jquery-mask/test/jquery.mask.test.js" package="jquery.mask.test.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="jquery.mask.test.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="29" name="/src/src/main/resources/static/vendors/jquery/jquery.min.js" package="jquery.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="jquery.min.js"/></testsuite><testsuite failures="2" errors="0" time="0" id="30" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?json-schema" package="json-schema:0.2.3" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2021-3918" name="pkg:npm/json-schema@0.2.3"><failure message="cvssV3: CRITICAL, score: 9.800000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes (&apos;Prototype Pollution&apos;)</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?json-schema, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-896r-f27r-55mw" name="pkg:npm/json-schema@0.2.3"><failure message="cvssV3: CRITICAL, score: 9.800000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes (&apos;Prototype Pollution&apos;).</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?json-schema, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="6" errors="0" time="0" id="31" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?lodash" package="lodash:4.17.15" skipped="0" tests="6" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2020-8203" name="pkg:npm/lodash@4.17.15"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>lodash - Prototype Pollution [ CVE-2020-8203 ] 

The software does not properly protect an assumed-immutable element from being modified by an attacker.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2020-8203 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?lodash, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-p6mc-m468-83gw" name="pkg:npm/lodash@4.17.15"><failure message="cvssV3: HIGH, score: 7.400000095367432 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:H)"/><system-out>Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The functions `pick`, `set`, `setWith`, `update`, `updateWith`, and `zipObjectDeep` allow a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires manipulating objects based on user-provided property values or arrays.

This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?lodash, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2021-23337" name="pkg:npm/lodash@4.17.15"><failure message="cvssV3: HIGH, score: 7.199999809265137 (CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Lodash versions prior to 4.17.21 are vulnerable to Command Injection via the template function.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?lodash, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-35jh-r3h4-6jhm" name="pkg:npm/lodash@4.17.15"><failure message="cvssV3: HIGH, score: 7.199999809265137 (CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H)"/><system-out>`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?lodash, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2020-28500" name="pkg:npm/lodash@4.17.15"><failure message="cvssV3: MEDIUM, score: 5.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>Lodash versions prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2020-28500 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?lodash, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-29mw-wpgm-hmr9" name="pkg:npm/lodash@4.17.15"><failure message="cvssV3: MEDIUM, score: 5.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `toNumber`, `trim` and `trimEnd` functions. 

Steps to reproduce (provided by reporter Liyuan Chen):
```js
var lo = require(&apos;lodash&apos;);

function build_blank(n) {
    var ret = &quot;1&quot;
    for (var i = 0; i &lt; n; i++) {
        ret += &quot; &quot;
    }
    return ret + &quot;1&quot;;
}
var s = build_blank(50000) var time0 = Date.now();
lo.trim(s) 
var time_cost0 = Date.now() - time0;
console.log(&quot;time_cost0: &quot; + time_cost0);
var time1 = Date.now();
lo.toNumber(s) var time_cost1 = Date.now() - time1;
console.log(&quot;time_cost1: &quot; + time_cost1);
var time2 = Date.now();
lo.trimEnd(s);
var time_cost2 = Date.now() - time2;
console.log(&quot;time_cost2: &quot; + time_cost2);
```</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?lodash, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="1" errors="0" time="0" id="32" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimatch" package="minimatch:3.0.4" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="GHSA-f8q6-p94x-37v3" name="pkg:npm/minimatch@3.0.4"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimatch, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="3" errors="0" time="0" id="33" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimist" package="minimist:0.0.8" skipped="0" tests="3" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="GHSA-xvch-5gv4-984h" name="pkg:npm/minimist@0.0.8"><failure message="cvssV3: CRITICAL, score: 9.800000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimist, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2020-7598" name="pkg:npm/minimist@0.0.8"><failure message="cvssV3: MEDIUM, score: 5.599999904632568 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L)"/><system-out>minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a &quot;constructor&quot; or &quot;__proto__&quot; payload.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2020-7598 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimist, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-vh95-rmgr-6w4m" name="pkg:npm/minimist@0.0.8"><failure message="cvssV3: MEDIUM, score: 5.599999904632568 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L)"/><system-out>Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  
Parsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  
This is exploitable if attackers have control over the arguments being passed to `minimist`.


## Recommendation

Upgrade to versions 0.2.1, 1.2.3 or later.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimist, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="3" errors="0" time="0" id="34" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimist" package="minimist:1.2.0" skipped="0" tests="3" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="GHSA-xvch-5gv4-984h" name="pkg:npm/minimist@1.2.0"><failure message="cvssV3: CRITICAL, score: 9.800000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimist, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2020-7598" name="pkg:npm/minimist@1.2.0"><failure message="cvssV3: MEDIUM, score: 5.599999904632568 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L)"/><system-out>minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a &quot;constructor&quot; or &quot;__proto__&quot; payload.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2020-7598 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimist, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-vh95-rmgr-6w4m" name="pkg:npm/minimist@1.2.0"><failure message="cvssV3: MEDIUM, score: 5.599999904632568 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L)"/><system-out>Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  
Parsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  
This is exploitable if attackers have control over the arguments being passed to `minimist`.


## Recommendation

Upgrade to versions 0.2.1, 1.2.3 or later.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?minimist, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="35" name="/src/src/main/resources/static/vendors/jquery-mask/package.js" package="package.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="package.js"/></testsuite><testsuite failures="2" errors="0" time="0" id="36" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?qs" package="qs:6.5.2" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2022-24999" name="pkg:npm/qs@6.5.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has &quot;deps: qs@6.9.7&quot; in its release description, is not vulnerable).

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2022-24999 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?qs, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-hrpp-h998-j3pp" name="pkg:npm/qs@6.5.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?qs, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="37" name="/src/src/main/resources/static/vendors/jquery-mask/test/qunit.js" package="qunit.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="qunit.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="38" name="/src/src/main/resources/static/vendors/fontawesome/js/regular.js" package="regular.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="regular.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="39" name="/src/src/main/resources/static/vendors/fontawesome/js/regular.min.js" package="regular.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="regular.min.js"/></testsuite><testsuite failures="2" errors="0" time="0" id="40" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?request" package="request:2.88.0" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2023-28155" name="pkg:npm/request@2.88.0"><failure message="cvssV3: MEDIUM, score: 6.099999904632568 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>The Request package through 2.88.1 for Node.js allows a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: This vulnerability only affects products that are no longer supported by the maintainer.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?request, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-p8p7-x288-28g6" name="pkg:npm/request@2.88.0"><failure message="cvssV3: MEDIUM, score: 6.099999904632568 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>The `request` package through 2.88.2 for Node.js and the `@cypress/request` package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).

NOTE: The `request` package is no longer supported by the maintainer.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?request, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="2" errors="0" time="0" id="41" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?semver" package="semver:5.4.1" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2022-25883" name="pkg:npm/semver@5.4.1"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Versions of the package semver before 7.5.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2022-25883 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?semver, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-c2qf-rxjj-qqgw" name="pkg:npm/semver@5.4.1"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?semver, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="2" errors="0" time="0" id="42" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?send" package="send:0.16.1" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="GHSA-m6fv-jmcg-4jfg" name="pkg:npm/send@0.16.1"><failure message="cvssV3: MEDIUM, score: 5.0 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L)"/><system-out>### Impact

passing untrusted user input - even after sanitizing it - to `SendStream.redirect()` may execute untrusted code

### Patches

this issue is patched in send 0.19.0

### Workarounds

users are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist

### Details

successful exploitation of this vector requires the following:

1. The attacker MUST control the input to response.redirect()
1. express MUST NOT redirect before the template appears
1. the browser MUST NOT complete redirection before:
1. the user MUST click on the link in the template
</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?send, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2024-43799" name="pkg:npm/send@0.16.1"><failure message="cvssV3: MEDIUM, score: 4.699999809265137 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>Send is a library for streaming files from the file system as a http response. Send passes untrusted user input to SendStream.redirect() which executes untrusted code. This issue is patched in send 0.19.0.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2024-43799 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?send, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="2" errors="0" time="0" id="43" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?serve-static" package="serve-static:1.13.1" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="GHSA-cm22-4g7w-348p" name="pkg:npm/serve-static@1.13.1"><failure message="cvssV3: MEDIUM, score: 5.0 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L)"/><system-out>### Impact

passing untrusted user input - even after sanitizing it - to `redirect()` may execute untrusted code

### Patches

this issue is patched in serve-static 1.16.0

### Workarounds

users are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist

### Details

successful exploitation of this vector requires the following:

1. The attacker MUST control the input to response.redirect()
1. express MUST NOT redirect before the template appears
1. the browser MUST NOT complete redirection before:
1. the user MUST click on the link in the template
</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?serve-static, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2024-43800" name="pkg:npm/serve-static@1.13.1"><failure message="cvssV3: MEDIUM, score: 4.699999809265137 (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>serve-static serves static files. serve-static passes untrusted user input - even after sanitizing it - to redirect() may execute untrusted code. This issue is patched in serve-static 1.16.0.

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2024-43800 for details</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?serve-static, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="3" errors="0" time="0" id="44" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?shelljs" package="shelljs:0.3.0" skipped="0" tests="3" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2022-0144" name="pkg:npm/shelljs@0.3.0"><failure message="cvssV3: HIGH, score: 7.099999904632568 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H)"/><system-out>shelljs is vulnerable to Improper Privilege Management</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?shelljs, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-4rq4-32rv-6wp6" name="pkg:npm/shelljs@0.3.0"><failure message="cvssV3: HIGH, score: 7.099999904632568 (CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:H)"/><system-out>shelljs is vulnerable to Improper Privilege Management</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?shelljs, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-64g7-mvw6-v9qj" name="pkg:npm/shelljs@0.3.0"><failure message="unscored severity: moderate"/><system-out>### Impact
Output from the synchronous version of `shell.exec()` may be visible to other users on the same system. You may be affected if you execute `shell.exec()` in multi-user Mac, Linux, or WSL environments, or if you execute `shell.exec()` as the root user.

Other shelljs functions (including the asynchronous version of `shell.exec()`) are not impacted.

### Patches
Patched in shelljs 0.8.5

### Workarounds
Recommended action is to upgrade to 0.8.5.

### References
https://huntr.dev/bounties/50996581-c08e-4eed-a90e-c0bac082679c/

### For more information
If you have any questions or comments about this advisory:
* Ask at https://github.com/shelljs/shelljs/issues/1058
* Open an issue at https://github.com/shelljs/shelljs/issues/new
</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?shelljs, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="45" name="/src/src/main/resources/static/vendors/jquery-mask/test/sinon-1.10.3.js" package="sinon-1.10.3.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="sinon-1.10.3.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="46" name="/src/src/main/resources/static/vendors/jquery-mask/test/sinon-qunit-1.0.0.js" package="sinon-qunit-1.0.0.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="sinon-qunit-1.0.0.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="47" name="/src/src/main/resources/static/vendors/fontawesome/js/solid.js" package="solid.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="solid.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="48" name="/src/src/main/resources/static/vendors/fontawesome/js/solid.min.js" package="solid.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="solid.min.js"/></testsuite><testsuite failures="2" errors="0" time="0" id="49" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?tough-cookie" package="tough-cookie:2.4.3" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2023-26136" name="pkg:npm/tough-cookie@2.4.3"><failure message="cvssV3: CRITICAL, score: 9.800000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. This issue arises from the manner in which the objects are initialized.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?tough-cookie, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-72xf-g2v4-qvf3" name="pkg:npm/tough-cookie@2.4.3"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N)"/><system-out>Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. This issue arises from the manner in which the objects are initialized.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?tough-cookie, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="2" errors="0" time="0" id="50" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?trim-newlines" package="trim-newlines:1.0.0" skipped="0" tests="2" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2021-33623" name="pkg:npm/trim-newlines@1.0.0"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the .end() method.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?trim-newlines, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-7p7h-4mm5-852v" name="pkg:npm/trim-newlines@1.0.0"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>@rkesters/gnuplot is an easy to use node module to draw charts using gnuplot and ps2pdf. The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the `.end()` method.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?trim-newlines, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="51" name="/src/src/main/resources/static/vendors/fontawesome/js/v4-shims.js" package="v4-shims.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="v4-shims.js"/></testsuite><testsuite failures="0" errors="0" time="0" id="52" name="/src/src/main/resources/static/vendors/fontawesome/js/v4-shims.min.js" package="v4-shims.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="v4-shims.min.js"/></testsuite><testsuite failures="4" errors="0" time="0" id="53" name="/src/src/main/resources/static/vendors/jquery-mask/package-lock.json?ws" package="ws:6.2.1" skipped="0" tests="4" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="CVE-2024-37890" name="pkg:npm/ws@6.2.1"><failure message="cvssV2: HIGH, score: 8.699999809265137 (CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N)"/><system-out>ws is an open source WebSocket client and server for Node.js. A request with a number of headers exceeding theserver.maxHeadersCount threshold could be used to crash a ws server. The vulnerability was fixed in ws@8.17.1 (e55e510) and backported to ws@7.5.10 (22c2876), ws@6.2.3 (eeb76d3), and ws@5.2.4 (4abd8f6). In vulnerable versions of ws, the issue can be mitigated in the following ways: 1. Reduce the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options so that no more headers than the server.maxHeadersCount limit can be sent. 2. Set server.maxHeadersCount to 0 so that no limit is applied.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?ws, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-3h5v-q93c-6h6q" name="pkg:npm/ws@6.2.1"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>### Impact

A request with a number of headers exceeding the[`server.maxHeadersCount`][] threshold could be used to crash a ws server.

### Proof of concept

```js
const http = require(&apos;http&apos;);
const WebSocket = require(&apos;ws&apos;);

const wss = new WebSocket.Server({ port: 0 }, function () {
  const chars = &quot;!#$%&amp;&apos;*+-.0123456789abcdefghijklmnopqrstuvwxyz^_`|~&quot;.split(&apos;&apos;);
  const headers = {};
  let count = 0;

  for (let i = 0; i &lt; chars.length; i++) {
    if (count === 2000) break;

    for (let j = 0; j &lt; chars.length; j++) {
      const key = chars[i] + chars[j];
      headers[key] = &apos;x&apos;;

      if (++count === 2000) break;
    }
  }

  headers.Connection = &apos;Upgrade&apos;;
  headers.Upgrade = &apos;websocket&apos;;
  headers[&apos;Sec-WebSocket-Key&apos;] = &apos;dGhlIHNhbXBsZSBub25jZQ==&apos;;
  headers[&apos;Sec-WebSocket-Version&apos;] = &apos;13&apos;;

  const request = http.request({
    headers: headers,
    host: &apos;127.0.0.1&apos;,
    port: wss.address().port
  });

  request.end();
});
```

### Patches

The vulnerability was fixed in ws@8.17.1 (https://github.com/websockets/ws/commit/e55e5106f10fcbaac37cfa89759e4cc0d073a52c) and backported to ws@7.5.10 (https://github.com/websockets/ws/commit/22c28763234aa75a7e1b76f5c01c181260d7917f), ws@6.2.3 (https://github.com/websockets/ws/commit/eeb76d313e2a00dd5247ca3597bba7877d064a63), and ws@5.2.4 (https://github.com/websockets/ws/commit/4abd8f6de4b0b65ef80b3ff081989479ed93377e)

### Workarounds

In vulnerable versions of ws, the issue can be mitigated in the following ways:

1. Reduce the maximum allowed length of the request headers using the [`--max-http-header-size=size`][] and/or the [`maxHeaderSize`][] options so that no more headers than the `server.maxHeadersCount` limit can be sent.
2. Set `server.maxHeadersCount` to `0` so that no limit is applied.

### Credits

The vulnerability was reported by [Ryan LaPointe](https://github.com/rrlapointe) in https://github.com/websockets/ws/issues/2230.

### References

- https://github.com/websockets/ws/issues/2230
- https://github.com/websockets/ws/pull/2231

[`--max-http-header-size=size`]: https://nodejs.org/api/cli.html#--max-http-header-sizesize
[`maxHeaderSize`]: https://nodejs.org/api/http.html#httpcreateserveroptions-requestlistener
[`server.maxHeadersCount`]: https://nodejs.org/api/http.html#servermaxheaderscount
</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?ws, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="CVE-2021-32640" name="pkg:npm/ws@6.2.1"><failure message="cvssV3: MEDIUM, score: 5.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>ws is an open source WebSocket client and server library for Node.js. A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server. The vulnerability has been fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff). In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?ws, project-references: [ package-lock.json: transitive ]</system-err></testcase><testcase classname="GHSA-6fc8-4gx4-v693" name="pkg:npm/ws@6.2.1"><failure message="cvssV3: MEDIUM, score: 5.300000190734863 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L)"/><system-out>### Impact

A specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.

### Proof of concept

```js
for (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {
  const value = &apos;b&apos; + &apos; &apos;.repeat(length) + &apos;x&apos;;
  const start = process.hrtime.bigint();

  value.trim().split(/ *, */);

  const end = process.hrtime.bigint();

  console.log(&apos;length = %d, time = %f ns&apos;, length, end - start);
}
```

### Patches

The vulnerability was fixed in ws@7.4.6 (https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff) and backported to ws@6.2.2 (https://github.com/websockets/ws/commit/78c676d2a1acefbc05292e9f7ea0a9457704bf1b) and ws@5.2.3 (https://github.com/websockets/ws/commit/76d47c1479002022a3e4357b3c9f0e23a68d4cd2).

### Workarounds

In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https://nodejs.org/api/cli.html#cli_max_http_header_size_size) and/or the [`maxHeaderSize`](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener) options.

### Credits

The vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https://github.com/robmcl4) from University of California, Santa Barbara.
</system-out><system-err>location: /src/src/main/resources/static/vendors/jquery-mask/package-lock.json?ws, project-references: [ package-lock.json: transitive ]</system-err></testcase></testsuite><testsuite failures="0" errors="0" time="0" id="54" name="/src/src/main/resources/static/vendors/jquery-mask/test/zepto/zepto.min.js" package="zepto.min.js" skipped="0" tests="1" timestamp="2024-11-25T20:33:02.668333679"><testcase classname="dependency-check" name="zepto.min.js"/></testsuite></testsuites>